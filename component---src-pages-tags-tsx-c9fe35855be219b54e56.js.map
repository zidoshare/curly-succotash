{"version":3,"sources":["webpack://curly-succotash/./src/components/Main.tsx","webpack://curly-succotash/./src/components/Main.module.scss","webpack://curly-succotash/./src/components/base/NoData.tsx","webpack://curly-succotash/./src/components/base/Position.tsx","webpack://curly-succotash/./src/pages/tags.tsx"],"names":["props","tProps","className","classnames","extra","style","position","textAlign","margin","Position","render","dProps","this","title","StaticQuery","query","data","site","siteMetadata","React","TagsPage","tags","headerType","HeaderType","group","tagSize","map","tag","name","fieldValue","count","totalCount","Link"],"mappings":"4LAGA,WACEA,GAIA,IAAMC,EAAS,OAAH,UACPD,EADO,CAEVE,UAAWC,ICTS,+BDSoBH,EAAME,aAGhD,cADOD,EAAOG,MAEZ,uBACEC,MAAO,CACLC,SAAU,aAGZ,uBAAUL,GACTD,EAAMI,S,gDElBb,eAAe,OACb,2BACE,sBAAIC,MAAO,CAAEE,UAAW,SAAUC,OAAQ,MAA1C,gB,8GCCiBC,E,6FACnBC,OAAA,WAAS,WACDC,EAAS,OAAH,UAAQC,KAAKZ,OAEzB,cADOW,EAAOE,MAEZ,gBAAC,EAAAC,YAAD,CACEC,MAAK,aASLL,OAAQ,SAACM,GAAD,OACN,gBAAC,IAAD,eACEH,MACE,EAAKb,MAAMa,MAAW,EAAKb,MAAMa,MAAjC,MAA4CG,EAAKC,KAAKC,aAAaL,MAAUG,EAAKC,KAAKC,aAAaL,OAElGF,Q,GApBsBQ,c,6KCcjBC,E,6FACnBV,OAAA,WAAS,IACCW,EAAST,KAAKZ,MAAMgB,KAApBK,KACR,OACE,gBAAC,KAAD,CAAYC,WAAYC,mBACtB,gBAAC,IAAD,CAAUV,MAAM,QAChB,gBAAC,IAAD,KACGQ,EAAKG,MACJ,gBAAC,IAAD,CACEC,QAAQ,QACRJ,KAAMA,EAAKG,MAAME,KAAI,SAAAC,GAAG,MAAK,CAC3BC,KAAMD,EAAIE,WACVC,MAAOH,EAAII,eAEbC,KAAMA,SAGR,gBAAC,IAAD,S,GAjB0Bb","file":"component---src-pages-tags-tsx-c9fe35855be219b54e56.js","sourcesContent":["import * as React from 'react'\nimport * as classes from './Main.module.scss'\nimport classnames from 'classnames'\nexport default (\n  props: React.HTMLProps<HTMLMainElement> & {\n    extra?: React.ReactElement<any>\n  }\n) => {\n  const tProps = {\n    ...props,\n    className: classnames(classes.mainRoot, props.className),\n  }\n  delete tProps.extra\n  return (\n    <div\n      style={{\n        position: 'relative',\n      }}\n    >\n      <main {...tProps} />\n      {props.extra}\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport const mainRoot = \"Main-module--mainRoot--5Dyrp\";","import * as React from 'react'\n\nexport default () => (\n  <div>\n    <h1 style={{ textAlign: 'center', margin: 100 }}>没有鸡，哪来的蛋呢</h1>\n  </div>\n)\n","import { Helmet, HelmetProps } from 'react-helmet'\nimport * as React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport { Query } from '../../graphql-types'\n\nexport default class Position extends React.Component<HelmetProps> {\n  render() {\n    const dProps = { ...this.props }\n    delete dProps.title\n    return (\n      <StaticQuery\n        query={graphql`\n          query PositionQuery {\n            site {\n              siteMetadata {\n                title\n              }\n            }\n          }\n        `}\n        render={(data: Query) => (\n          <Helmet\n            title={\n              this.props.title ? `${this.props.title} - ${data.site.siteMetadata.title}` : data.site.siteMetadata.title\n            }\n            {...dProps}\n          />\n        )}\n      />\n    )\n  }\n}\n","import * as React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport { WithLayout } from '../containers/LayoutContainer'\nimport { HeaderType } from '../contants/header'\nimport Position from '../components/base/Position'\nimport Main from '../components/Main'\nimport TagsCard from '../components/TagsCard'\nimport NoData from '../components/base/NoData'\nexport interface TagsPageProps {\n  data: {\n    tags: {\n      group: Array<{\n        fieldValue: string\n        totalCount: number\n      }>\n    }\n  }\n}\n\nexport default class TagsPage extends React.Component<TagsPageProps> {\n  render() {\n    const { tags } = this.props.data\n    return (\n      <WithLayout headerType={HeaderType.AUTHOR_HEADER}>\n        <Position title=\"标签云\" />\n        <Main>\n          {tags.group ? (\n            <TagsCard\n              tagSize=\"large\"\n              tags={tags.group.map(tag => ({\n                name: tag.fieldValue,\n                count: tag.totalCount,\n              }))}\n              Link={Link}\n            />\n          ) : (\n            <NoData />\n          )}\n        </Main>\n      </WithLayout>\n    )\n  }\n}\n\nexport const pageQuery = graphql`\n  {\n    tags: allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___updatedDate] }\n      filter: { frontmatter: { draft: { ne: true } }, fileAbsolutePath: { regex: \"/blog/\" } }\n    ) {\n      group(field: frontmatter___tags, limit: 3) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n"],"sourceRoot":""}